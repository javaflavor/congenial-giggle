---
# tasks file for Jenkins
- name: Verify that dc/jenkins exists
  k8s_facts:
    kind: DeploymentConfig
    name: jenkins
    namespace: "{{ _jenkins_namespace }}"
  register: jenkins_dc

- name: Deploy/Undeploy Jenkins using template
  when:
    - (_jenkins_enabled and jenkins_dc.resources == []) or
      (not _jenkins_enabled and jenkins_dc.resources != [])
  shell: |
    oc get template/jenkins-persistent -o yaml -n openshift | \
    oc process -f - \
    -p ENABLE_OAUTH={{ _jenkins_oauth }} \
    -p MEMORY_LIMIT={{ _jenkins_memory_limit }} \
    -p VOLUME_CAPACITY={{ _jenkins_volume_size }} \
    --local | oc {{ create_or_delete }} -f - -n {{ _jenkins_namespace }}
  vars:
    create_or_delete: "{{ jenkins.enabled | ternary('create', 'delete') }}"

- name: Verify that the jenkins Pod is running
  when:
    - _jenkins_enabled
  k8s_facts:
    kind: Pod
    label_selectors:
      - deploymentconfig = jenkins
    namespace: "{{ _jenkins_namespace }}"
  register: jenkins_pod
  until:
  - jenkins_pod.resources != []
  - jenkins_pod.resources[0].status.phase == "Running"
  - jenkins_pod.resources[0].status.containerStatuses[0].ready|d(False)|bool
  retries: 50
  delay: 5

- name: Install additional plugins, if any.
  when:
    - _jenkins_enabled
    - _jenkins_plugins != ''
    - _jenkins_plugins != env_INSTALL_PLUGINS
  shell: |
    oc set env dc/jenkins \
      INSTALL_PLUGINS="{{ _jenkins_plugins }}" \
      OVERRIDE_PV_PLUGINS_WITH_IMAGE_PLUGINS=true
  register: setenv_results
  vars:
    query: "resources.spec.template.spec.containers[0].env[?(@.name == 'INSTALL_PLUGINS')].value"
    env_INSTALL_PLUGINS: "{{ jenkins_dc | json_query(query) }}"

- name: Wait jenkins Pod restarts.
  when:
    - _jenkins_enabled
    - setenv_results is defined
  pause:
    seconds: 5

- name: Verify that the jenkins Pod is restarted, correctly.
  when:
    - _jenkins_enabled
    - setenv_results is defined
  k8s_facts:
    kind: Pod
    label_selectors:
      - deploymentconfig = jenkins
    namespace: "{{ _jenkins_namespace }}"
  register: jenkins_pod
  until:
  - jenkins_pod.resources != []
  - jenkins_pod.resources[0].status.phase == "Running"
  - jenkins_pod.resources[0].status.containerStatuses[0].ready|d(False)|bool
  retries: 50
  delay: 5
